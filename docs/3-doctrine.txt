# Doctrine

Creer la base de donnees selon le nom definit dans le fichier .env
> php bin/console doctrine:database:create


# Generate entity
> php bin/console make:entity

------------- console ---------------------------------------
Class name of the entity to create or update (e.g. TinyGnome):
 > Property

 created: src/Entity/Property.php
 created: src/Repository/PropertyRepository.php

 Entity generated! Now let's add some fields!
 You can always add more fields later manually or by re-running this command.

 New property name (press <return> to stop adding fields):
 > title

 Field type (enter ? to see all types) [string]:
 > ? (renseigne la liste disponible )

Main types
  * string
  * text
  * boolean
  * integer (or smallint, bigint)
  * float

Relationships / Associations
  * relation (a wizard ðŸ§™ will help you build the relation)
  * ManyToOne
  * OneToMany
  * ManyToMany
  * OneToOne

Array/Object Types
  * array (or simple_array)
  * json
  * object
  * binary
  * blob

Date/Time Types
  * datetime (or datetime_immutable)
  * datetimetz (or datetimetz_immutable)
  * date (or date_immutable)
  * time (or time_immutable)
  * dateinterval

Other Types
  * json_array
  * decimal
  * guid


 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 > [Enter]

 Can this field be null in the database (nullable) (yes/no) [no]:
 > no

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > description

 Field type (enter ? to see all types) [string]:
 > text

 Can this field be null in the database (nullable) (yes/no) [no]:
 > yes

 updated: src/Entity/Property.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 >  [ Enter ]


  Success!


 Next: When you're ready, create a migration with make:migration

 >

 Entity :
  - Classe est l'entite (Ex. Property)
 Repository:
  - Classe responsable de communiquer avec la base de donnees (Ex. PropertyRepository)


  # Generer la Migration
  > php bin/console make:migration

  # Migrer
  > php bin/console doctrine:migrations:migrate


  # Ajouter  des champs a une entite
  > php bin/console make:entity Property

  Your entity already exists! So let's add some new fields!

   New property name (press <return> to stop adding fields):
   > surface

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   > no

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > rooms

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > bedrooms

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > floor

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > price

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > heat

   Field type (enter ? to see all types) [string]:
   > integer

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > city

   Field type (enter ? to see all types) [string]:
   > string

   Field length [255]:
   >

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > address

   Field type (enter ? to see all types) [string]:
   >

   Field length [255]:
   >

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > postal_code

   Field type (enter ? to see all types) [string]:
   >

   Field length [255]:
   >

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > sold

   Field type (enter ? to see all types) [string]:
   > boolean

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   > created_at

   Field type (enter ? to see all types) [datetime]:
   >

   Can this field be null in the database (nullable) (yes/no) [no]:
   >

   updated: src/Entity/Property.php

   Add another property? Enter the property name (or press <return> to stop adding fields):
   >



    Success!


   Next: When you're ready, create a migration with make:migration

   # Make Migration
   > php bin/console make:migration

   # Migrate
   > php bin/console doctrine:migrations:migrate


   # GENERATE SLUG [ Library from packagist ]
   Packagist: https://packagist.org/packages/cocur/slugify
   Gitlab:    https://github.com/cocur/slugify

   $ composer require cocur/slugify



